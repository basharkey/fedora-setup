---
- name: Copy br_netfilter kernel module config
  copy:
    src: br_netfilter.conf
    dest: /etc/modules-load.d/br_netfilter.conf
    mode: '0644'
  become: yes

- name: Load br_netfilter kernel module
  modprobe:
    name: br_netfilter
    state: present
  become: yes

- name: Copy br_netfilter kernel variable config
  copy:
    src: 99-netfilter-bridge.conf
    dest: /etc/sysctl.d/99-netfilter-bridge.conf
    mode: '0755'
  become: yes

- name: Reload all kernel variables
  systemd:
    name: systemd-sysctl
    state: restarted
  become: yes

- name: Check if bridge adapter is already the primary interface
  when: bridge_primary_interface == bridge_secondary_interface
  block:
    - name: Create primary bridge interface
      nmcli:
        conn_name: "{{ bridge_primary_interface }}-pri"
        ifname: "{{ bridge_primary_interface }}"
        autoconnect: yes
        type: bridge
        stp: no
        state: present

    - name: Attach secondary interface to bridge
      nmcli:
        conn_name: "{{ bridge_primary_interface }}-sec"
        ifname: "{{ bridge_secondary_interface }}"
        master: "{{ bridge_primary_interface }}"
        autoconnect: yes
        type: bridge-slave
        # Fixes local DHCP and packet dropping issues
        hairpin: no
        state: present

    - name: Disable default interface from starting on boot
      nmcli:
        conn_name: "{{ bridge_secondary_interface }}"
        autoconnect: no
        state: present

    - name: Bring default interface down
      command: "nmcli connection down {{ bridge_secondary_interface }}"
  become: yes

- name: Ensure virtqemud is running
  systemd:
    name: virtqemud
    state: started
  become: yes

- name: Ensure virtnetworkd is running
  systemd:
    name: virtnetworkd
    state: started
  become: yes

- name: Generate libvirt bridge network definition var
  set_fact:
    bridge_template: "{{ lookup('template', 'bridge-network.xml.j2') }}"
  become: yes

- name: Add libvirt bridge network definition
  shell: "virsh net-define <(echo '{{ bridge_template | string }}')"
  register: result
  failed_when: result.rc != 0 and "network '" ~ bridge_libvirt_network ~ "' already exists" not in result.stderr
  become: yes

- name: Enable libvirt bridge network at boot
  command: "virsh net-autostart {{ bridge_libvirt_network }}"
  become: yes

- name: Start libvirt bridge network
  command: "virsh net-start {{ bridge_libvirt_network }}"
  register: result
  failed_when: result.rc != 0 and "network is already active" not in result.stderr
  become: yes
