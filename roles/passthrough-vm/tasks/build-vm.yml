---
- name: "Get {{ vm.name }} vm uuid if it already exists"
  block:
    - name: Check get vm uuid if it is already defined
      command: "virsh domuuid {{ vm.name }}"
      register: uuid
    - set_fact:
        uuid: " {{ uuid.stdout }}"
  rescue:
    - name: "Set {{ vm.name }} vm uuid to empty string"
      set_fact:
        uuid: ""

- name: "Template {{ vm.name }} libvirt xml file"
  template:
    src: vm.xml.j2
    dest: "/etc/libvirt/qemu/{{ vm.name }}.xml"

- name: "Define {{ vm.name }} vm"
  virt:
    command: define
    xml: "{{ lookup('template', 'vm.xml.j2') }}"

- name: "Build {{ vm.name }} pci devices"
  when: vm.pci_devices is defined
  include_tasks: build-pci.yml
  loop: "{{ vm.pci_devices  }}"
  loop_control:
    loop_var: device

- name: "Setup {{ vm.name }} libvirt hooks"
  when: vm.libvirt_hooks
  block:
    - name: "Create {{ vm.name }} libvirt hook directories"
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - "/etc/libvirt/hooks/qemu.d/{{ vm.name }}/prepare/begin"
        - "/etc/libvirt/hooks/qemu.d/{{ vm.name }}/release/end"

    - name: "Copy {{ vm.name }} libvirt hooks script"
      copy:
        src: qemu
        dest: /etc/libvirt/hooks/qemu
        mode: 0755
    
    - name: "Template {{ vm.name }} libvirt prepare hook script"
      template:
        src: cpu-prepare.sh.j2
        dest: "/etc/libvirt/hooks/qemu.d/{{ vm.name }}/prepare/begin/cpu-prepare.sh"
        mode: 0755

    - name: "Template {{ vm.name }} libvirt release hook script"
      template:
        src: cpu-release.sh.j2
        dest: "/etc/libvirt/hooks/qemu.d/{{ vm.name }}/release/end/cpu-release.sh"
        mode: 0755

    - name: "Restart virtqemud to load {{ vm.name }} libvirt hooks"
      systemd:
        name: virtqemud
        state: restarted
